name: Release October

on:
  release:
    types: [published]

jobs:
  release:
    name: Release October (Windows x86)
    runs-on: windows-latest
    strategy:
      matrix:
        platform:
          - windows/amd64
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Normalise platform tag
        id: normalise_platform
        shell: bash
        run: |
          tag=$(echo ${{ matrix.platform }} | sed -e 's/\//-/g')
          echo "::set-output name=tag::$tag"

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.19
      
      - name: Install makensis
        uses: crazy-max/ghaction-chocolatey@v2
        with:
          args: install nsis

      - name: Install wails
        run: go install github.com/wailsapp/wails/v2/cmd/wails@latest

      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Update npm
        run: npm install -g npm

      - name: Bump manifest version
        run: node version.js ${{ github.event.release.tag_name }}

      - name: Build frontend assets
        shell: bash
        run: cd frontend && npm install

      - name: Build Windows NSIS installer
        shell: bash
        run: CGO_ENABLED=1 wails build -platform ${{ matrix.platform }} -nsis -ldflags "-X main.version=${{ github.event.release.tag_name }}"
        
      - name: Codesign Windows NSIS Installer
        run: |
          echo "Creating certificate file"
          New-Item -ItemType directory -Path certificate
          Set-Content -Path certificate\certificate.txt -Value '${{ secrets.WIN_SIGNING_CERT }}'
          certutil -decode certificate\certificate.txt certificate\certificate.pfx
          echo "Signing October installer"
          & 'C:/Program Files (x86)/Windows Kits/10/bin/10.0.17763.0/x86/signtool.exe' sign /fd sha256 /tr http://ts.ssl.com /f certificate\certificate.pfx /p '${{ secrets.WIN_SIGNING_CERT_PASSWORD }}' October-amd64-installer.exe
        working-directory: ./build/bin
      
      - name: Remove old October binary
        shell: bash
        run: rm October.exe
        working-directory: ./build/bin

      - name: Compress binary
        run: Compress-Archive October-amd64-installer.exe october-${{ steps.normalise_platform.outputs.tag }}.zip
        working-directory: ./build/bin

      - name: Get latest release from API
        uses: octokit/request-action@v2.x
        id: get_latest_release
        with:
          route: GET /repos/{owner}/{repo}/releases
          owner: marcus-crane
          repo: october
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get release URL
        id: get_upload_url
        shell: bash
        run: |
          url=$(echo "$response" | jq -r '.[0].upload_url')
          echo "::set-output name=url::$url"
        env:
          response:  ${{ steps.get_latest_release.outputs.data }}

      - name: Upload zip file
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ARTIFACT_NAME: october-${{ steps.normalise_platform.outputs.tag }}
        with:
          upload_url:  ${{ steps.get_upload_url.outputs.url }}
          asset_path: ./build/bin/${{ env.ARTIFACT_NAME }}.zip
          asset_name: ${{ env.ARTIFACT_NAME }}.zip
          asset_content_type: application/zip